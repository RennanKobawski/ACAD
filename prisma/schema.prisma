generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  OperationalAgent
  UCCOPAgent
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  image     String?
  talons    Talon[]
  events    Event[]
  sessions  Session[]
  account   Account[]
  role      Role     @default(OperationalAgent)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Talon {
  id          Int      @id @default(autoincrement())
  dailyIndex  Int
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  ht          Int
  vtr         String
  responsible String
  startHour   DateTime
  endHour     DateTime?
  startKm     Int
  endKm       Int?
  percKm      Int?
  startQar1   DateTime?
  endQar1     DateTime?
  startQar2   DateTime?
  endQar2     DateTime?
  note        String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id             Int      @id @default(autoincrement())
  userId         String
  user           User     @relation(fields: [userId], references: [id])
  address        String
  occasion       String
  vtr            String
  startTime      DateTime
  activationTime DateTime?
  endTime        DateTime?
  arrivalTime    DateTime?
  note           String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}